Parameter,Details
"**cluster_os_type**

``string``

Required","* Specify the operating system running on the OIM and the one to be provisioned on the compute nodes.
* **Value**: ``rhel``"
"**cluster_os_version**

``string``

Required","* The OS Version that will be provisoned on compute nodes.
* For RHEL, the accepted ``value`` is ``9.4``."
"**iso_file_path**

``string``

Required","* Path where the user has placed the ``<OS>.iso`` image that needs to be provisioned on target nodes. 
* ``iso_file_path`` should contain the ``provision_os`` and ``provision_os_version`` values mentioned in the filename.
* **Example**: ``/opt/omnia/input/project_default/RHEL-9.4.0-20240419.25-x86_64-dvd1.iso``"
"**repo_config**

``string``

Required","* Omnia sets up a local Pulp repository on the OIM and downloads all the necessary packages or images for the cluster into this repository. The behavior of the Pulp container varies depending on the value of the ``repo_config`` parameter.
* In case of ``always``, Omnia downloads all the required packages from the internet when the ``local_repo.yml`` is executed. These packages are then cached locally, allowing them to be reused in future operations without needing to download them again.
* In case of ``partial``, during the execution of the ``local_repo.yml`` playbook, Omnia first checks the ``user_repo_url`` or ``user_registry`` and downloads all the packages from the URLs listed there. Any packages not found in these sources are then fetched from the internet. However, these packages are not cached locally—they are discarded after use.
* In case of ``never``, Omnia does not store any packages locally. Instead, the Pulp container functions solely as a proxy, streaming the required packages directly from the source URLs each time they are requested.
* **Accepted value**: ``always``, ``partial``, ``never``
* **Default value**: ``always``

.. note:: Repositories that are not available as images, debian packages, RPMs, manifests, iso, or tarballs will be downloaded and configured locally on the OIM. Additionally, AMD GPU drivers, CUDA, and OFED are also downloaded by default if they are mentioned in the ``/opt/omnia/input/project_default/software_config.json``.	"
"**softwares**

``JSON list``

Required","* A JSON list of required software and (optionally) the software version.
* The following software should be listed with a version in the list: BeeGFS, AMD GPU, Kubernetes, CUDA, OFED, UCX, and ROCm.
* A minimum of one software should be provided in the list for ``local_repo.yml`` to execute correctly.
* The ``<os_type>_software_config.json`` will have the basic softwares present in it. To add additional software stacks, add the software under ``/opt/omnia/input/project_default/software_config.json``.
* For the list of all applicable softwares based on your ``<cluster_os_type>``, refer the templates at ``examples/template_<os>_software_config.json``. For example, ``examples/template_rhel_software_config.json``.

.. note:: The accepted names for software is taken from ``/opt/omnia/input/project_default/config/<cluster_os_type>/<cluster_os_version>``.
"
