#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Check mysql container deployment
  block:
    - name: Check if MySQL container is running after deployment
      containers.podman.podman_container_info:
        name: "{{ mysql_container_name }}"
      register: mysql_deploy_container_info
      until: mysql_deploy_container_info.containers | length > 0 and
              mysql_deploy_container_info.containers[0].State.Status == 'running'
      retries: "{{ max_retries }}"
      delay: "{{ delay_count }}"

    - name: Notify user of MySQL deployment status
      ansible.builtin.debug:
        msg: "{{ mysql_container_success_msg.splitlines() | join(' ') }}"
      when:
        - mysql_deploy_container_info.containers | length > 0
        - mysql_deploy_container_info.containers[0].State.Status == 'running'
  rescue:
    - name: Container MySQL deployment failed
      ansible.builtin.fail:
        msg: "{{ mysql_container_failure_msg.splitlines() | join(' ') }}"

- name: Ensure pip3 is available using ensurepip
  ansible.builtin.command: "python3 -m ensurepip"
  changed_when: false

- name: Install python packages using pip3
  ansible.builtin.pip:
    name: "{{ item }}"
    state: present
    executable: pip3
  loop: "{{ pip_packages }}"

- name: Create MySQL database and table
  block:
    - name: Execute SQL to create DB and table
      community.mysql.mysql_query:
        login_host: "127.0.0.1"
        login_port: "{{ mysql_port }}"
        login_user: "root"
        login_password: "{{ hostvars['localhost']['mysqldb_root_password'] }}"
        query: "{{ mysql_db_create_query }}"
      register: createdb_result
      until: createdb_result is not failed
      retries: "{{ create_db_retries }}"
      delay: "{{ create_db_delay }}"
      no_log: true
  rescue:
    - name: DB creation failed
      ansible.builtin.fail:
        msg: "{{ mysql_database_create_failure_msg.splitlines() | join(' ') }} Error: {{ createdb_result.msg }}"
