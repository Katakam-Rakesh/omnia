# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Validate BMC group data file exists
  ansible.builtin.stat:
    path: "{{ bmc_group_data_filename }}"
  register: bmc_group_data_stat

- name: Fail if BMC group data file does not exist
  ansible.builtin.fail:
    msg: "{{ bmc_group_data_file_not_found_msg }}"
  when: not bmc_group_data_stat.stat.exists

- name: Read the first line of the CSV file
  command: "head -n 1 {{ bmc_group_data_filename }}"
  register: csv_header

- name: Validate BMC group data headers
  ansible.builtin.fail:
    msg: "{{ bmc_group_data_invalid_msg }}'"
  when: csv_header.stdout != bmc_group_data_headers

- name: Read BMC group data
  ansible.builtin.set_fact:
    bmc_group_data: "{{ lookup('file', bmc_group_data_filename).splitlines() }}"

- name: Extract BMC_IP values
  ansible.builtin.set_fact:
    bmc_ips: "{{ bmc_group_data[1:] | map('split', ',') | map('first') | list }}"

- name: Validate each BMC IP
  ansible.builtin.fail:
    msg: "{{ bmc_group_data_invalid_ip_msg }} : {{ item }}"
  when: item is not ansible.netcommon.ipaddr
  loop: "{{ bmc_ips }}"
