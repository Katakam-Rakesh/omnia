#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Get prometheus svc IP
  ansible.builtin.command: kubectl get svc "{{ prometheus_k8s_name }}" -n "{{ telemetry_namespace }}" -o=jsonpath='{.spec.clusterIP}'
  changed_when: false
  register: prometheus_svc_ip

- name: Get mysqldb svc IP
  ansible.builtin.command: kubectl get svc "{{ mysqldb_k8s_name }}" -n "{{ telemetry_namespace }}" -o=jsonpath='{.spec.clusterIP}'
  changed_when: false
  register: mysql_svc_ip

- name: Deploy idrac-telemetry pod
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: "{{ idrac_telemetry_k8s_name }}"
        namespace: "{{ telemetry_namespace }}"
        labels:
          app: "{{ idrac_telemetry_k8s_name }}"
      spec:
        selector:
          matchLabels:
            app: "{{ idrac_telemetry_k8s_name }}"
        replicas: 1
        strategy:
          type: RollingUpdate
        template:
          metadata:
            labels:
              app: "{{ idrac_telemetry_k8s_name }}"
          spec:
            volumes:
              - name: telemetry-reference-tools
                hostPath:
                  path: "{{ telemetry_mount_path + idrac_telemetry_folder_name }}"
                  type: Directory

            hostAliases:
              - ip: "127.0.0.1"
                hostnames:
                  - "activemq"
              - ip: "{{ prometheus_svc_ip.stdout }}"
                hostnames:
                  - "prometheus"
              - ip: "{{ mysql_svc_ip.stdout }}"
                hostnames:
                  - "mysqldb"

            containers:
              - name: activemq
                image: "{{ activemq_image }}"
                imagePullPolicy: "IfNotPresent"
                ports:
                  - containerPort: "{{ activemq_http_port_1 }}"
                  - containerPort: "{{ activemq_http_port_2 }}"

              - name: telemetry-receiver
                image: "{ go_image }}"
                imagePullPolicy: "IfNotPresent"
                volumeMounts:
                  - mountPath: /go/src/github.com/telemetry-reference-tools
                    name: telemetry-reference-tools
                workingDir: /go/src/github.com/telemetry-reference-tools
                env:
                  - name: MESSAGEBUS_HOST
                    value: activemq
                  - name: MESSAGEBUS_PORT
                    value: "{{ messagebus_http_port }}"
                  - name: CONFIGUI_HTTP_PORT
                    value: "{{ configui_http_port }}"
                  - name: MYSQL_DATABASE
                    value: "{{ mysqldb_name }}"
                  - name: MYSQL_USER
                    valueFrom:
                      secretKeyRef:
                        name: "{{ mysqldb_secrets_name }}"
                        key: sqldb_user
                  - name: MYSQL_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: "{{ mysqldb_secrets_name }}"
                        key: sqldb_password
                  - name: MYSQL_HOST
                    value: mysqldb
                  - name: MYSQL_HOST_PORT
                    value: "{{ mysqldb_port1 }}"
                command:
                  - "/bin/sh"
                  - "-c"
                args: ["./scripts/example/idrac-telemetry-receiver.sh"]

              - name: prometheus_pump
                image: "{{ go_image }}"
                imagePullPolicy: "IfNotPresent"
                volumeMounts:
                  - mountPath: /go/src/github.com/telemetry-reference-tools
                    name: telemetry-reference-tools
                workingDir: /go/src/github.com/telemetry-reference-tools
                env:
                  - name: MESSAGEBUS_HOST
                    value: activemq
                  - name: MESSAGEBUS_PORT
                    value: "{{ messagebus_http_port }}"
                  - name: PROMETHEUSDB_SERVER
                    value: prometheus
                command:
                  - "/bin/sh"
                  - "-c"
                args: ["go run cmd/prometheuspump/prometheuspump.go"]
