# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# local_repo has to be run before software_update

- name: Invoke get_config_credentials.yml
  when: not config_file_status | default(false) | bool
  ansible.builtin.import_playbook: ../credential_utility/get_config_credentials.yml

- name: Include input project directory
  when: not project_dir_status | default(false) | bool
  ansible.builtin.import_playbook: ../include_input_dir.yml

# Get all nodes to update repo
- name: Get the nodes to update repo from DB and create new group
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Get the software organized by group
      group_package_map:
        input_path: "{{ hostvars['localhost']['input_project_dir'] }}"
      register: grouped_packages

    - name: Get all discovered nodes from DB
      community.postgresql.postgresql_query:
        login_db: omniadb
        login_user: postgres
        query: |
          SELECT node,hostname,admin_ip,role,group_name,service_tag
          FROM cluster.nodeinfo
          WHERE node!='oim';
        login_password: "{{ hostvars['localhost']['postgresdb_password'] }}"
      register: db_result
      delegate_to: omnia_provision

    - name: Create ansible group to update repo
      ansible.builtin.add_host:
        name: "{{ node.admin_ip }}"
        groups: "addl_repo"
      when: node.group_name in grouped_packages.grp_pkg_map.keys()
      loop: "{{ db_result.query_result }}"
      loop_control:
        loop_var: node

# Update user repo
- name: Update user repo
  hosts: addl_repo
  # gather_facts: false
  roles:
    - ../roles/update_user_repo/common
    # update_user_registry

- name: Get the additional software organized by group
  hosts: localhost
  gather_facts: false
  roles:
    - software_update
