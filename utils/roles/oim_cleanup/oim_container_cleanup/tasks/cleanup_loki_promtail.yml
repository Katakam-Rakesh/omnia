# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Check if Promtail container is running after deployment
  containers.podman.podman_container_info:
    name: "{{ promtail_container_name }}"
  register: promtail_status_before
  failed_when: false

- name: Remove Promtail container if exists
  when: promtail_status_before.containers | length > 0
  block:
    - name: Stop Promtail container
      containers.podman.podman_container:
        name: "{{ promtail_container_name }}"
        state: stopped
      failed_when: false

    - name: Remove Promtail
      containers.podman.podman_container:
        name: "{{ promtail_container_name }}"
        state: absent
        force_delete: true
  rescue:
    - name: Promtail container removal failed
      ansible.builtin.fail:
        msg: "{{ promtail_container_name }} {{ container_removal_failure_msg }}"

- name: Check if Loki container is running after deployment
  containers.podman.podman_container_info:
    name: "{{ loki_container_name }}"
  register: loki_status_before
  failed_when: false

- name: Remove Loki container if exists
  when: loki_status_before.containers | length > 0
  block:
    - name: Stop Loki
      containers.podman.podman_container:
        name: "{{ loki_container_name }}"
        state: stopped
      failed_when: false

    - name: Remove Loki
      containers.podman.podman_container:
        name: "{{ loki_container_name }}"
        state: absent
        force_delete: true
  rescue:
    - name: Loki container removal failed
      ansible.builtin.fail:
        msg: "{{ loki_container_name }} {{ container_removal_failure_msg }}"

- name: Confirm Promtail is stopped and removed
  containers.podman.podman_container_info:
    name: "{{ promtail_container_name }}"
  register: promtail_status_after
  failed_when: false

- name: Confirm Loki is stopped and removed
  containers.podman.podman_container_info:
    name: "{{ loki_container_name }}"
  register: loki_status_after
  failed_when: false

- name: Perform cleanup only if both containers are removed
  when:
    - promtail_status_before.containers | length > 0 or loki_status_before.containers | length > 0
    - promtail_status_after.containers | length == 0
    - loki_status_after.containers | length == 0
  block:
    - name:  Remove Podman bind-mounted volumes for loki and promtail
      containers.podman.podman_volume:
        name: "{{ item.name }}"
        state: absent
      loop: "{{ loki_podman_volumes }}"
      changed_when: false

    - name: Remove Loki and Promtail Offline repo Directory
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
        force: true
      loop: "{{ loki_promtail_cleanup_directory }}"

    - name: Remove firewall ports
      ansible.posix.firewalld:
        port: "{{ item }}"
        state: disabled
        permanent: true
      loop: "{{ loki_firewall_ports }}"
  rescue:
    - name: Loki and Promtail cleanup failed
      ansible.builtin.fail:
        msg: "{{ resource_removal_failure_msg }}"