# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Create omnia container images directory
  ansible.builtin.file:
    path: "{{ images_directory_path }}"
    state: directory
    mode: "{{ read_write_mode }}"

- name: Remove container images tar file if exists
  ansible.builtin.file:
    path: "{{ images_directory_path }}/{{ container_tar_file }}"
    state: absent

- name: Add kubespray to container image list if k8s_support is true
  when: hostvars['localhost']['k8s_support'] | default(false)
  ansible.builtin.set_fact:
    container_images: "{{ container_images + ['omnia_kubespray:' + kubespray_tag] }}"

- name: Add telemetry to container image list if telemetry_support is true
  when: hostvars['localhost']['idrac_telemetry_support'] | default(false)
  ansible.builtin.set_fact:
    container_images: >-
      {{ container_images + [
          'docker.io/library/mysql:' + mysql_tag,
          'docker.io/rmohr/activemq:' + activemq_tag,
          'docker.io/library/golang:' + golang_tag,
          'docker.io/prom/prometheus:' + prometheus_tag
        ] }}

- name: Add telemetry to container image list if visualization_support is true
  when: hostvars['localhost']['visualization_support'] | default(false)
  ansible.builtin.set_fact:
    container_images: >-
      {{ container_images + [
          'docker.io/grafana/grafana:' + grafana_image_tag,
          'docker.io/grafana/loki:' + loki_image_tag,
          'docker.io/grafana/promtail:' + promtail_image_tag
        ] }}

- name: Save container images (This task may take 10 mins)
  containers.podman.podman_save:
    image: "{{ container_images }}"
    dest: "{{ images_directory_path }}/{{ container_tar_file }}"
    multi_image_archive: true
