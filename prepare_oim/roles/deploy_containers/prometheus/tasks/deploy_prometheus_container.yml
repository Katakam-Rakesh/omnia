# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

---

- name: Prepare Prometheus directories
  ansible.builtin.file:
    path: "{{ prometheus_dir }}"
    state: directory
    mode: "{{ dir_mode }}"

- name: Check if {{ prometheus_container_name }} is already running and port is occupied # noqa: name[template]
  containers.podman.podman_container_info:
    name: "{{ prometheus_container_name }}"
  register: prometheus_container_info
  failed_when: false

- name: Deploy Prometheus container and check deployment status
  when: prometheus_container_info.containers | length == 0 or prometheus_container_info.containers[0].State.Status != 'running'
  block:
    - name: Create Prometheus directories
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: directory
        mode: "{{ dir_mode }}"
      loop: "{{ prometheus_podman_volumes }}"

    - name: Create prometheus.yml at Prometheus NFS share
      ansible.builtin.template:
        src: "{{ proemetheus_yml_temp_src }}"
        dest: "{{ prometheus_dir }}/prometheus.yml"
        mode: "{{ file_mode }}"

    - name: Create Podman bind-mounted volumes for Prometheus
      containers.podman.podman_volume:
        name: "{{ item.name }}"
        state: present
        driver: local
        options:
          - "o=bind"
          - "type=none"
          - "device={{ item.path }}"
      loop: "{{ prometheus_podman_volumes }}"

    - name: Deploy Prometheus container
      containers.podman.podman_container:
        name: "{{ prometheus_container_name }}"
        image: "{{ prometheus_image }}"
        state: started
        restart_policy: "no"
        detach: true
        network_mode: host
        env: "{{ prometheus_env }}"
        volumes: "{{ prometheus_volumes }}"
        command:
          - "--config.file=/config/prometheus.yml"
          - "--storage.tsdb.path=/prometheus"

    - name: Check if Prometheus container is running after deployment
      containers.podman.podman_container_info:
        name: "{{ prometheus_container_name }}"
      register: prometheus_status
      until: prometheus_status.containers | length > 0 and
             prometheus_status.containers[0].State.Status == 'running'
      retries: "{{ max_retries }}"
      delay: "{{ delay_count }}"

    - name: Notify user of Prometheus container deployment status
      ansible.builtin.debug:
        msg: "{{ prometheus_container_success_msg.splitlines() | join(' ') }}"
      when:
        - prometheus_status.containers | length > 0
        - prometheus_status.containers[0].State.Status == 'running'

  rescue:
    - name: Prometheus container deployment failed
      ansible.builtin.fail:
        msg: "{{ prometheus_container_failure_msg.splitlines() | join(' ') }}"
