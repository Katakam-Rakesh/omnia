# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

---

- name: Prepare Prometheus Pump directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode }}"
  loop: "{{ prometheus_pump_directories }}"

- name: Check if {{ prometheus_pump_container_name }} is already running and port is occupied # noqa: name[template]
  containers.podman.podman_container_info:
    name: "{{ prometheus_pump_container_name }}"
  register: prometheus_pump_container_info
  failed_when: false

- name: Deploy Prometheus Pump container and check deployment status
  when: prometheus_pump_container_info.containers | length == 0 or prometheus_pump_container_info.containers[0].State.Status != 'running'
  block:
    - name: Deploy the Prometheus Pump container
      containers.podman.podman_container:
        name: "{{ prometheus_pump_container_name }}"
        image: "{{ prometheus_pump_image }}"
        state: started
        restart_policy: "no"
        detach: true
        network_mode: host
        volumes: "{{ prometheus_pump_volumes }}"
        working_dir: "/go/src/github.com/telemetry-reference-tools"
        env: "{{ prometheus_pump_receiver_env }}"
        command: ["/bin/sh", "-c", "go run cmd/prometheuspump/prometheuspump.go"]

    - name: Check if Prometheus Pump container is running after deployment
      containers.podman.podman_container_info:
        name: "{{ prometheus_pump_container_name }}"
      register: prometheus_pump_status
      until: prometheus_pump_status.containers | length > 0 and
             prometheus_pump_status.containers[0].State.Status == 'running'
      retries: "{{ max_retries }}"
      delay: "{{ delay_count }}"

    - name: Notify user of Prometheus Pump container deployment status
      ansible.builtin.debug:
        msg: "{{ prometheus_pump_container_success_msg.splitlines() | join(' ') }}"
      when:
        - prometheus_pump_status.containers | length > 0
        - prometheus_pump_status.containers[0].State.Status == 'running'

  rescue:
    - name: Prometheus Pump container deployment failed
      ansible.builtin.fail:
        msg: "{{ prometheus_pump_container_failure_msg.splitlines() | join(' ') }}"
