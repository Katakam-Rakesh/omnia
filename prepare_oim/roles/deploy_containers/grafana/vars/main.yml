# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

max_retries: 10
delay_count: 5

# Usage: deploy_grafana_container.yml
omnia_nfs_share: "{{ oim_shared_path }}/omnia"
grafana_image: "docker.io/grafana/grafana"
grafana_image_tag: "9.2.2"
grafana_container_name: "grafana"
dir_permissions_755: "0755"
grafana_logs_dir: "{{ omnia_nfs_share }}/log/telemetry/grafana"
grafana_data_dir: "{{ omnia_nfs_share }}/telemetry/grafana"
grafana_podman_volumes:
  - { name: "grafana_data", path: "{{ grafana_data_dir }}" }
  - { name: "grafana_log", path: "{{ grafana_logs_dir }}" }
grafana_volumes:
  - "grafana_data:/var/lib/grafana{{ selinux_option }}"
  - "grafana_log:/var/log/grafana{{ selinux_option }}"
grafana_port: 5000
grafana_user: "grafana_user"
grafana_user_password: "grafana_user_password"
grafana_secrets:
  - { name: "{{ grafana_user }}", value: "{{ hostvars['localhost']['grafana_username'] }}" }
  - { name: "{{ grafana_user_password }}", value: "{{ hostvars['localhost']['grafana_password'] }}" }
bin_sh: "/bin/sh"
grafana_entrypoint: "/run.sh"
grafana_entry_script: >-
  export GF_SECURITY_ADMIN_USER=$(cat /run/secrets/grafana_user) && export GF_SECURITY_ADMIN_PASSWORD=$(cat /run/secrets/grafana_user_password) && /run.sh
wait_time: 30
grafana_container_success_msg: "The Grafana container '{{ grafana_container_name }}' container has been successfully deployed."
grafana_container_failure_msg: |
  The deployment of the {{ grafana_container_name }} container has failed.
  To resolve this, check logs using 'podman logs {{ grafana_container_name }}' from OIM
  and then run utility/oim_cleanup.yml playbook to clean up existing OIM resources.
  After cleanup, re-run the prepare_oim.yml playbook to successfully deploy the {{ grafana_container_name }} container.
grafana_image_pull_fail_msg: |
  The pull of the Grafana image '{{ grafana_image }}:{{ grafana_image_tag }}' has failed.
  To resolve this, please check the following error: {{ image_pull_result.msg }}.
  After addressing the issue, you can re-run the playbook to successfully pull the Grafana image.
grafana_image_not_found_msg: |
  The Grafana image '{{ grafana_image }}:{{ grafana_image_tag }}' was not found after pull attempt.
  Please check if the image is available and re-run the playbook.

# Usage: configure_datasource.yml
url_retries: 10
prometheus_port: 9090
loki_port: 3100
grafana_url_unreachable_fail_msg: |
  Failed. grafana url http://127.0.0.1:{{ grafana_port }} is not reachable.
  Please retry after grafana url is reachable. If facing this issue again, please utility/oim_cleanup.yml playbook to clean up existing OIM resources.
  After cleanup, re-run the prepare_oim.yml playbook to successfully deploy the {{ grafana_container_name }} container.
