#!/bin/bash
################################################################################################################
#  omnia_servie_role:
#      Install packages required for service node and configure the environment
#
#################################################################################################################

# Define log file
LOGFILE="/var/log/xcat/xcat.log"

log() {
  echo "$1" >> "$LOGFILE"
}

echo "--------------------------" >> "$LOGFILE"
echo "Starting service node setup" >> "$LOGFILE"

# List of required packages
PACKAGES=(
    "initscripts"
    "xCATsn"
    "goconserver"
    "perl-Net-Telnet"
    "perl-Expect"
    "rsync"
)

# Install each package and log a simple message
for pkg in "${PACKAGES[@]}"; do
    echo "**** Installing Package - $pkg..." >> "$LOGFILE"
    dnf install -y "$pkg" >> "$LOGFILE"
    if [[ $? -eq 0 ]]; then
        echo "$pkg installed successfully." >> "$LOGFILE"
    else
        echo "**** Error installing $pkg. Check logs for details." >> "$LOGFILE"
        echo "**** Exiting this script." >> "$LOGFILE"
        exit 1
    fi
done

echo "Updating enviornment variables" >> "$LOGFILE"
echo "source /etc/profile.d/xcat.sh" >> "/root/.bashrc"

echo "Downloading xcat genesis file to /tmp" >> "$LOGFILE"
wget "http://{{ admin_nic_ip }}:80/install/xcat-genesis-base-x86_64.tar.gz" -O /tmp/xcat-genesis-base-x86_64.tar.gz
genesis_url_status=$?
if [ $genesis_url_status -eq 0 ]; then
    tar -zxvf /tmp/xcat-genesis-base-x86_64.tar.gz -C /tmp
    genesis_rpm_file=`rpm -qa | grep xCAT-genesis-base-x86_64`
    rpm -e --nodeps $genesis_rpm_file
    rpm -ivh /tmp/xCAT-genesis-base-x86_64-2.16.4-snap202308211541.noarch.rpm
    echo "Executing mknb x86_64 command -" >> "$LOGFILE"
    /opt/xcat/sbin/mknb x86_64 >> "$LOGFILE"
    if [[ $? -eq 0 ]]; then
        echo " mknb x86_64 command execution successfully." >> "$LOGFILE"
    else
        echo "**** [Error] in executing mknb x86_64 command." >> "$LOGFILE"
    fi
fi

echo "Install and configure podman" >> "$LOGFILE"

if [ -f "/etc/debian_version" ];then
  str_os_type="debian"
else
  str_os_type="redhat"
fi

# Install and configure podman
if [ "$str_os_type" = "redhat" ]; then
    sudo dnf install -y podman
fi

# sudo systemctl enable podman.socket || { echo "Error enabling podman.socket." >> "$LOGFILE"; exit 1; }
# sudo systemctl start podman.socket || { echo "Error starting podman.socket." >> "$LOGFILE"; exit 1; }

log "INFO: Renaming admin interface to {{ hostvars['omnia_provision']['admin_nic'] }}."
# Ensure the management interface name is the same as active OIM, if not add the active OIM's interface name as an alternative name
if ! ifconfig | grep -w {{ hostvars['omnia_provision']['admin_nic'] }}; then

    passive_oim_node_ips="{{ hostvars['omnia_provision']['discovered_service_nodes'] | map(attribute='admin_ip') | join(' ') }}"
    for admin_ip in ${passive_oim_node_ips};do
        INTERFACE=$(ip addr show | awk "/${admin_ip}/{print \$NF; exit}")
        if [ -n "$INTERFACE" ]; then
            break
        fi
    done

    if [ -z "$INTERFACE" ]; then
        log "ERROR:: No admin interface found."
        exit 1
    fi

    TYPE=$(cat /sys/class/net/${INTERFACE}/type)
    MAC=$(cat /sys/class/net/${INTERFACE}/address)
    # 70-persistent-net.rules must be used as the file for consistent interface naming
    [ -f {{ persistent_rules_file }} ] || touch {{ persistent_rules_file }}
    echo "SUBSYSTEM==\"net\",ACTION==\"add\",ATTR{address}==\"${MAC}\",ATTR{type}==\"${TYPE}\",NAME=\"{{ hostvars['omnia_provision']['admin_nic'] }}\"" >> {{ persistent_rules_file }}

    log "INFO: Renamed the admin interface to {{ hostvars['omnia_provision']['admin_nic'] }}."
fi

log "--------------------------"
log "Service node setup completed successfully."
