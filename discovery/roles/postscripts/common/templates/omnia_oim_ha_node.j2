#!/bin/bash
################################################################################################################
#  omnia_oim_ha_node:
#      Configure a passive OIM node.
#################################################################################################################
# Define log file
LOGFILE="/var/log/xcat/xcat.log"

# Get the directory of the log file
log_dir=$(dirname "$LOGFILE")

# Create the log directory if it doesn't exist
if [ ! -d "$log_dir" ]; then
    mkdir -p "$log_dir"
fi

# Create the log file if it doesn't exist
if [ ! -f "$LOGFILE" ]; then
    touch "$LOGFILE"
fi

echo "--------------------------" >> "$LOGFILE"
echo "$(date) - INFO - Starting OIM HA Node Post Script." >> "$LOGFILE"

if [ -f "/etc/debian_version" ];then
  str_os_type="debian"
else
  str_os_type="redhat"
fi

# Install and configure podman
if [ "$str_os_type" = "redhat" ]; then
    sudo dnf install -y podman
fi

echo "INFO: Renaming admin interface to {{ hostvars['omnia_provision']['admin_nic'] }}." >> "$LOGFILE"
# Ensure the management interface name is the same as active OIM, if not add the active OIM's interface name as an alternative name
if ! ifconfig | grep -w {{ hostvars['omnia_provision']['admin_nic'] }}; then
    passive_oim_node_ips="{{ hostvars['omnia_provision']['passive_oim_nodes'].query_result | map(attribute='admin_ip') | join(' ') }}"
    for admin_ip in ${passive_oim_node_ips};do
        INTERFACE=$(ip addr show | awk "/${admin_ip}/{print \$NF; exit}")
        if [ -n "$INTERFACE" ]; then
            break
        fi
    done

    if [ -z "$INTERFACE" ]; then
        echo "ERROR:: No admin interface found." >> "$LOGFILE"
        exit 1
    fi

    TYPE=$(cat /sys/class/net/${INTERFACE}/type)
    MAC=$(cat /sys/class/net/${INTERFACE}/address)
    # 70-persistent-net.rules must be used as the file for consistent interface naming
    [ -f {{ persistent_rules_file }} ] || touch {{ persistent_rules_file }}
    echo "SUBSYSTEM==\"net\",ACTION==\"add\",ATTR{address}==\"${MAC}\",ATTR{type}==\"${TYPE}\",NAME=\"{{ hostvars['omnia_provision']['admin_nic'] }}\"" >> {{ persistent_rules_file }}
    CONNECTION_PROFILE=$(nmcli -f name,device connection show | grep -w ${INTERFACE} | cut -d' ' -f1)
    nmcli connection modify ${CONNECTION_PROFILE} connection.interface-name ""
    nmcli connection modify ${CONNECTION_PROFILE} match.interface-name {{ hostvars['omnia_provision']['admin_nic'] }} || { echo "ERROR: Using nmcli to match the interface name." >> "$LOGFILE"; exit 1; }

    echo "INFO: Renamed the admin interface to {{ hostvars['omnia_provision']['admin_nic'] }}." >> "$LOGFILE"
fi

echo "$(date) - INFO - Finished OIM HA Post Script." >> "$LOGFILE"
echo "---------------------------"