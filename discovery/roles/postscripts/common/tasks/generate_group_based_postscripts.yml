# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Create a list of discovered groups
  ansible.builtin.set_fact:
    discovered_groups: "{{ discovered_groups | default([]) + item.split(',') | map('trim') | list }}"
  loop: "{{ discovered_nodes | map(attribute='group_name') | list }}"

- name: Print discovered_groups
  debug:
    msg: "{{ discovered_groups }}"

- name: Fetch list of unique groups from discovered groups
  ansible.builtin.set_fact:
    unique_groups: "{{ discovered_groups | unique }}"

- name: Print unique groups
  debug:
    msg: "{{ unique_groups }}"

- name: Collect all RPM package groups that are discovered into a list
  set_fact:
    fetch_rpm_package_groups: >-
      {{
        group_to_additional_sw_package_map
        | dict2items
        | selectattr('key', 'in', unique_groups)
        | selectattr('value', 'defined')
        | selectattr('value', 'contains', 'rpm')
        | map(attribute='key')
        | list
      }}

#- name: Create a list of discovered groups with additional software rpm packages
#  set_fact:
#    fetch_rpm_package_groups: "{{ fetch_rpm_package_groups | default([]) + [item.key] }}"
#  loop: "{{ group_to_additional_sw_package_map | dict2items }}"
#  when:
#    - item.key in unique_groups
#    - "'rpm' in item.value"

#- name: Debug packages per group
#  debug:
#    msg: "Group {{ item }} RPM packages: {{ (group_to_additional_sw_package_map[item] | default([])) | selectattr('type', 'equalto', 'rpm') | list }}"
#  loop: "{{ fetch_rpm_package_groups }}"

- name: Generate postscripts for groups in fetch_rpm_package_groups
  template:
    src: "{{ grp_additional_software_template_path }}"
    dest: "{{ grp_additional_software_postscripts_dest_path }}"
    mode: "{{ file_permissions }}"
  loop: "{{ fetch_rpm_package_groups }}"
  vars:
    group_name: "{{ item }}"
    packages: >-
      {{ group_to_additional_sw_package_map[item].rpm | default([]) }}