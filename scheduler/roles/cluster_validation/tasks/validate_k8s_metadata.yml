#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Validate k8s metadata
  when: k8s_support
  block:
    - name: Check if the k8s metadata file exists
      ansible.builtin.stat:
        path: "{{ metadata_file }}"
      register: metadata_stat

    - name: Fail if k8s metadata file does not exist
      ansible.builtin.fail:
        msg: "{{ k8s_metadata_file_not_exist_msg }}"
      when: not metadata_stat.stat.exists

    - name: Read k8s metadata file
      ansible.builtin.slurp:
        src: "{{ metadata_file }}"
      register: metadata_content
      when: metadata_stat.stat.exists

    - name: Parse YAML
      ansible.builtin.set_fact:
        metadata_dict: "{{ metadata_content.content | b64decode | from_yaml }}"

    - name: Check if the given k8s version exists in metadata
      ansible.builtin.set_fact:
        matched_kubespray_version: "{{ metadata_dict.k8s_kubespray_versions[k8s_version] }}"
      when: k8s_version in metadata_dict.k8s_kubespray_versions

    - name: Fail if k8s version is not found in metadata
      ansible.builtin.fail:
        msg: "{{ k8s_version_failed_msg }}"
      when: k8s_version not in metadata_dict.k8s_kubespray_versions

    - name: Show result
      ansible.builtin.debug:
        msg: "Kubernetes version {{ k8s_version }} maps to Kubespray version {{ matched_kubespray_version }}"
      when: k8s_version in metadata_dict.k8s_kubespray_versions
