# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Check Openmpi directory on the nfs share exist
  ansible.builtin.stat:
    path: "{{ omnia_share_path }}/{{ benchmarks_dir_openmpi }}/{{ bin_folder }}"
  register: openmpi_dir_data

- name: Verify Openmpi installation
  ansible.builtin.command:
    "{{ openmpi_info_cmd }}"
  args:
    chdir: "{{ omnia_share_path }}/{{ benchmarks_dir_openmpi }}/{{ bin_folder }}"
  when: openmpi_dir_data.stat.exists
  register: openmpi_info
  changed_when: false

- name: Set fact if Openmpi installation is successful
  ansible.builtin.set_fact:
    openmpi_installed: true
  when:
    - openmpi_dir_data.stat.exists
    - openmpi_info.rc == 0

- name: Execute Openmpi installation tasks if share path exists
  when: openmpi_installed is not defined or not openmpi_installed
  block:
    - name: Creates compile and benchmarks directory on the nfs share
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "{{ dir_mode }}"
      with_items:
        - "{{ omnia_share_path }}/{{ compiler_dir_openmpi }}"
        - "{{ omnia_share_path }}/{{ benchmarks_dir_openmpi }}"
      run_once: true

    - name: Copy the openmpi.tar.gz file into nfs share
      ansible.builtin.get_url:
        url: "{{ offline_tarball_path }}/openmpi/{{ openmpi_dir }}.tar.gz"
        dest: "{{ omnia_share_path }}/{{ compiler_dir_openmpi }}/"
        mode: "{{ copy_mode }}"
      run_once: true

    - name: Extract openmpi.tar.gz into nfs_share/openmpi/openmpi-4.1.6
      ansible.builtin.unarchive:
        src: "{{ omnia_share_path }}/{{ compiler_dir_openmpi }}/{{ openmpi_dir }}.tar.gz"
        dest: "{{ omnia_share_path }}/{{ compiler_dir_openmpi }}/"
        remote_src: true
      run_once: true

    - name: Check ucx directory on the nfs share exist
      ansible.builtin.stat:
        path: "{{ omnia_share_path }}/{{ benchmarks_dir_ucx }}"
      register: ucx_dir_data

    - name: Construct openmpi compile the command with ucx and slurm
      ansible.builtin.set_fact:
        openmpi_compile_cmd: "../configure --prefix={{ omnia_share_path }}/{{ benchmarks_dir_openmpi }}
         --enable-mpi1-compatibility --enable-prte-prefix-by-default
         {{ '--with-slurm=yes' if slurm_support else '--with-slurm=no' }}{{ ' --with-ucx=' + ucx_dir_data.stat.path + ' ' if ucx_installed else ' ' }}
         2>&1 | tee config.out"

    - name: Create a build directory inside openmpi folder
      ansible.builtin.file:
        path: "{{ omnia_share_path }}/{{ compiler_dir_openmpi }}/{{ openmpi_dir }}-{{ openmpi_software_version }}/build"
        state: directory
        mode: "{{ dir_mode }}"
      run_once: true

    - name: Run command ../configure --prefix=/install path
      ansible.builtin.shell: "{{ openmpi_compile_cmd }}" # noqa: command-instead-of-shell
      args:
        chdir: "{{ omnia_share_path }}/{{ compiler_dir_openmpi }}/{{ openmpi_dir }}-{{ openmpi_software_version }}/build"
      register: mpi_config
      changed_when: mpi_config.rc == 0
      run_once: true
      failed_when: mpi_config.rc != 0

    - name: Run command "run 'make -j 8' and make install"
      ansible.builtin.shell: |
        make -j 8
        make install
      args:
        chdir: "{{ omnia_share_path }}/{{ compiler_dir_openmpi }}/{{ openmpi_dir }}-{{ openmpi_software_version }}/build"
      changed_when: false
      run_once: true
      failed_when: false

    - name: Display the openmpi_info command
      ansible.builtin.command:
        "{{ openmpi_info_cmd }}"
      args:
        chdir: "{{ omnia_share_path }}/{{ benchmarks_dir_openmpi }}/{{ bin_folder }}"
      register: openmpi_info
      changed_when: false

    - name: Display error message if openmpi install fails
      ansible.builtin.fail:
        msg: "{{ openmpi_info_error }}"
      when: openmpi_info.rc != 0
