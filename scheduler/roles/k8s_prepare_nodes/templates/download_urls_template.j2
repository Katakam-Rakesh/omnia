{% if hostvars['localhost']['k8s_offline_install'] %}
# Include downlod URLs
kubeadm_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/{{ hostvars['localhost']['kubeadm_package'] }}/{{ hostvars['localhost']['kubeadm_package'] }}.tar.gz"
kubectl_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/{{ hostvars['localhost']['kubectl_package'] }}/{{ hostvars['localhost']['kubectl_package'] }}.tar.gz"
kubelet_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/{{ hostvars['localhost']['kubelet_package'] }}/{{ hostvars['localhost']['kubelet_package'] }}.tar.gz"
crictl_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/{{ hostvars['localhost']['crictl_package'] }}/{{ hostvars['localhost']['crictl_package'] }}.tar.gz"
calicoctl_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/{{ hostvars['localhost']['calicoctl_package'] }}/{{ hostvars['localhost']['calicoctl_package'] }}.tar.gz"
calico_crds_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/{{ hostvars['localhost']['calico_crds_package'] }}/{{ hostvars['localhost']['calico_crds_package'] }}.tar.gz"
cni_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/{{ hostvars['localhost']['cni_package'] }}/{{ hostvars['localhost']['cni_package'] }}.tar.gz"
nerdctl_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/{{ hostvars['localhost']['nerdctl_package'] }}/{{ hostvars['localhost']['nerdctl_package'] }}.tar.gz"
runc_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/{{ hostvars['localhost']['runc_package'] }}/{{ hostvars['localhost']['runc_package'] }}.tar.gz"
etcd_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/{{ hostvars['localhost']['etcd_package'] }}/{{ hostvars['localhost']['etcd_package'] }}.tar.gz"
containerd_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/{{ hostvars['localhost']['containerd_package'] }}/{{ hostvars['localhost']['containerd_package'] }}.tar.gz"
helm_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/{{ hostvars['localhost']['helm_package'] }}/{{ hostvars['localhost']['helm_package'] }}.tar.gz"
registry_host: "{{ pulp_server_ip }}:{{ pulp_registry_port }}"
kube_image_repo: "{{ pulp_server_ip }}:{{ pulp_registry_port }}"
docker_image_repo: "{{ pulp_server_ip }}:{{ pulp_registry_port }}"
quay_image_repo: "{{ pulp_server_ip }}:{{ pulp_registry_port }}"
github_image_repo: "{{ pulp_server_ip }}:{{ pulp_registry_port }}"
docker_rh_repo_base_url: "{{ hostvars['localhost']['docker_rh_repo_base_url'] | default('') }}"
docker_rh_repo_gpgkey: "{{ hostvars['localhost']['docker_rh_repo_gpgkey'] | default('') }}"
{% else %}
# Online mode
kube_image_repo: "registry.k8s.io"
docker_image_repo: "docker.io"
quay_image_repo: "quay.io"
docker_rh_repo_base_url: ""
docker_rh_repo_gpgkey: ""
    {% if enable_routed_internet %}
# Include proxy config on clusters with partial or no dedicated internet access    
        {% if enable_k8s_ha %}
http_proxy: "http://{{ kube_vip }}:{{ proxy_port }}"
https_proxy: "http://{{ kube_vip }}:{{ proxy_port }}"
        {% else %}
http_proxy: "http://{{ admin_nic_ip }}:{{ proxy_port }}"
https_proxy: "http://{{ admin_nic_ip }}:{{ proxy_port }}"
        {% endif %}
    {% else %}
# Include no_proxy config on cluster with dedicated internet
no_proxy: "localhost,127.0.0.1,{{ hostvars['localhost']['admin_nic_ip'] }},{{ hostvars['localhost']['k8s_service_addresses'] }},{{ hostvars['localhost']['k8s_pod_network_cidr'] }},{{ hostvars['localhost']['oim_hostname'] }},{{ hostvars['localhost']['domain_name'] }}"   # noqa: yaml[line-length]
additional_no_proxy: "{{ hostvars['localhost']['user_no_proxy'] if hostvars['localhost']['no_proxy_input_status'] else '' }}"   # noqa: yaml[line-length]
    {% endif %}
{% endif %}
